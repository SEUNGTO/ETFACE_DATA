name: DART crawller


on:
  push:
    branches: [ "main" ]
    
  pull_request:
    branches: [ "main" ]

  schedule:
    # 매주 토요일 자정
    - cron: '0 15 * * 5'
     

jobs:
  
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
        fetch-depth: 0
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run crawlling
      env:
        STORAGE_NAME: ${{ secrets.STORAGE_NAME }}
        WALLET_FILE: ${{ secrets.WALLET_FILE }}
        GCP_TYPE: ${{ secrets.GCP_TYPE }}
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        GCP_PRIVATE_KEY_ID: ${{ secrets.GCP_PRIVATE_KEY_ID }}
        GCP_PRIVATE_KEY: ${{ secrets.GCP_PRIVATE_KEY }}
        GCP_CLIENT_EMAIL: ${{ secrets.GCP_CLIENT_EMAIL }}
        GCP_CLIENT_ID: ${{ secrets.GCP_CLIENT_ID }}
        GCP_AUTH_URI: ${{ secrets.GCP_AUTH_URI }}
        GCP_TOKEN_URI: ${{ secrets.GCP_TOKEN_URI }}
        GCP_PROVIDER_URL: ${{ secrets.GCP_PROVIDER_URL }}
        GCP_CLIENT_URL: ${{ secrets.GCP_CLIENT_URL }}
        GCP_UNIV_DOMAIN: ${{ secrets.GCP_UNIV_DOMAIN }}

        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_DSN: ${{ secrets.DB_DSN }}
        DB_WALLET_PASSWORD: ${{ secrets.DB_WALLET_PASSWORD }}
        DART_API_KEY : ${{ secrets.DART_API_KEY }}

      run: |
        # python "main_dart.py"

